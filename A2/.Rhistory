View(data_list)
View(data_list[4])
data_list[4] <- "New element"
print(data_list[4])
data_list[4] <- NULL
print(data_list[4])
data_list[3] <- "updated element"
print(data_list[3])
num_list <- list(1,2,3,4,5)       #Author DataFlair
day_list <- list("Mon","Tue","Wed", "Thurs", "Fri")
merge_list <- c(num_list, day_list)
merge_list
int_list <- list(1:5)     #Author DataFlair
print(int_list)
int_list2 <- list(10:14)
print(int_list2)
vec1 <- unlist(int_list)
vec2 <- unlist(int_list2)
print(vec1)
print(vec2)
int_list <- list(1:5)     #Author DataFlair
print(int_list)
View(int_list)
int_list2 <- list(10:14)
View(int_list)
setwd("D:/A2")
CoralData <- read.csv("LeagueofLegends.csv")
LOLData <- read.csv("LeagueofLegends.csv")
view(LOLData)
view(LOLData)
view(LOLData)
LOLData <- read.csv("LeagueofLegends.csv")
view(LOLData)
view(LOLData)
View(LOLData)
LOLData <- read.csv("LeagueofLegends.csv")
View(LOLData)
View(LOLData)
int_list[[1]]
levels(LOLData$golddiff)
l <- as.list(levels(LOLData$golddiff))
View(LOLData)
LOLData <- read.csv("LeagueofLegends.csv")
View(LOLData)
l <- as.list(levels(LOLData$golddiff))
LOLData <- read.csv("LeagueofLegends.csv")
l <- as.list(levels(LOLData$golddiff))
View(LOLData)
data<- LOLData[c(6,10)]
View(data)
write.csv(data, file = "data.csv")
global<-read.csv('LeagueofLegends.csv',sep=',')
any(is.na(global))
g1<-global %>%
group_by(League, Season, Year) %>% summarise(number=n()) %>%
ggplot(aes(x=Year,y=number,fill=League)) +
geom_histogram(stat='identity',position='stack') +
scale_fill_manual(values=c("#3B9AB2", "#78B7C5", "#EBCC2A", "#E1AF00", "#F21A00","#9A8822", "#F5CDB4", "#F8AFA8")) +
theme(legend.position='none')  + xlab('') + ylab('number of games')
g2<-global %>%
group_by(League) %>% summarise(number=n()) %>%
ggplot(aes(x=reorder(League,-number),y=number,fill=League)) +
geom_histogram(stat='identity') +
scale_fill_manual(values=c("#3B9AB2", "#78B7C5", "#EBCC2A", "#E1AF00", "#F21A00","#9A8822", "#F5CDB4", "#F8AFA8")) +
theme(legend.position='top',axis.text.x = element_text(angle=45, hjust=1),legend.text=element_text(size=8),legend.key.size = unit(.3, "cm"))  + xlab('') + ylab('number of games')
library(ggplot2)
library(dplyr)
library(gridExtra)
library(grid)
library(matrixStats)
library(RColorBrewer)
g2<-global %>%
group_by(League) %>% summarise(number=n()) %>%
ggplot(aes(x=reorder(League,-number),y=number,fill=League)) +
geom_histogram(stat='identity') +
scale_fill_manual(values=c("#3B9AB2", "#78B7C5", "#EBCC2A", "#E1AF00", "#F21A00","#9A8822", "#F5CDB4", "#F8AFA8")) +
theme(legend.position='top',axis.text.x = element_text(angle=45, hjust=1),legend.text=element_text(size=8),legend.key.size = unit(.3, "cm"))  + xlab('') + ylab('number of games')
g1
View(g1)
g1<-global %>%
group_by(League, Season, Year) %>% summarise(number=n()) %>%
ggplot(aes(x=Year,y=number,fill=League)) +
geom_histogram(stat='identity',position='stack') +
scale_fill_manual(values=c("#3B9AB2", "#78B7C5", "#EBCC2A", "#E1AF00", "#F21A00","#9A8822", "#F5CDB4", "#F8AFA8")) +
theme(legend.position='none')  + xlab('') + ylab('number of games')
library(ggplot2)
library(dplyr)
library(gridExtra)
library(grid)
library(matrixStats)
library(RColorBrewer)
global<-read.csv('LeagueofLegends.csv',sep=',')
any(is.na(global))
g1<-global %>%
group_by(League, Season, Year) %>% summarise(number=n()) %>%
ggplot(aes(x=Year,y=number,fill=League)) +
geom_histogram(stat='identity',position='stack') +
scale_fill_manual(values=c("#3B9AB2", "#78B7C5", "#EBCC2A", "#E1AF00", "#F21A00","#9A8822", "#F5CDB4", "#F8AFA8")) +
theme(legend.position='none')  + xlab('') + ylab('number of games')
g2<-global %>%
group_by(League) %>% summarise(number=n()) %>%
ggplot(aes(x=reorder(League,-number),y=number,fill=League)) +
geom_histogram(stat='identity') +
scale_fill_manual(values=c("#3B9AB2", "#78B7C5", "#EBCC2A", "#E1AF00", "#F21A00","#9A8822", "#F5CDB4", "#F8AFA8")) +
theme(legend.position='top',axis.text.x = element_text(angle=45, hjust=1),legend.text=element_text(size=8),legend.key.size = unit(.3, "cm"))  + xlab('') + ylab('number of games')
grid.arrange(g1,g2,ncol=2)
global %>%
dplyr::select(blueTeamTag, bResult,Year) %>%
dplyr::filter(bResult==1) %>%
dplyr::group_by(blueTeamTag,Year) %>%
summarise(number=n()) %>%
ggplot(aes(x=blueTeamTag,y=number,fill=number)) +
geom_bar(stat='identity',width = 0.75) +
theme(legend.position='top',axis.text.x = element_text(angle=45, hjust=1,size=7)) +
facet_wrap(~Year,ncol=1) +
xlab('') + ylab('') + scale_fill_gradient(name='# of wins as Blue Team',low="#85D4E3", high="#3B9AB2")
global %>%
dplyr::select(redTeamTag, rResult,Year) %>%
dplyr::filter(rResult==1) %>%
dplyr::group_by(redTeamTag,Year) %>%
summarise(number=n()) %>%
ggplot(aes(x=redTeamTag,y=number,fill=number)) +
geom_bar(stat='identity',width = 0.75) +
theme(legend.position='top',axis.text.x = element_text(angle=45, hjust=1,size=7)) +
facet_wrap(~Year,ncol=1) +
xlab('') + ylab('') + scale_fill_gradient(name='# of wins as Red Team',low="#F8AFA8", high="#F21A00")
options(width=100)
knitr::opts_chunk$set(out.width='1000px',dpi=200,message=FALSE,warning=FALSE)
library(ggplot2)
library(dplyr)
library(gridExtra)
library(grid)
library(matrixStats)
library(RColorBrewer)
install.packages("matrixStats")
library(RColorBrewer)
options(width=100)
knitr::opts_chunk$set(out.width='1000px',dpi=200,message=FALSE,warning=FALSE)
install.packages("knitr")
options(width=100)
knitr::opts_chunk$set(out.width='1000px',dpi=200,message=FALSE,warning=FALSE)
global<-read.csv('LeagueofLegends.csv',sep=',')
any(is.na(global))
g1<-global %>%
group_by(League, Season, Year) %>% summarise(number=n()) %>%
ggplot(aes(x=Year,y=number,fill=League)) +
geom_histogram(stat='identity',position='stack') +
scale_fill_manual(values=c("#3B9AB2", "#78B7C5", "#EBCC2A", "#E1AF00", "#F21A00","#9A8822", "#F5CDB4", "#F8AFA8")) +
theme(legend.position='none')  + xlab('') + ylab('number of games')
g2<-global %>%
group_by(League) %>% summarise(number=n()) %>%
ggplot(aes(x=reorder(League,-number),y=number,fill=League)) +
geom_histogram(stat='identity') +
scale_fill_manual(values=c("#3B9AB2", "#78B7C5", "#EBCC2A", "#E1AF00", "#F21A00","#9A8822", "#F5CDB4", "#F8AFA8")) +
theme(legend.position='top',axis.text.x = element_text(angle=45, hjust=1),legend.text=element_text(size=8),legend.key.size = unit(.3, "cm"))  + xlab('') + ylab('number of games')
grid.arrange(g1,g2,ncol=2)
library(ggplot2)
library(dplyr)
library(gridExtra)
library(grid)
library(matrixStats)
library(RColorBrewer)
LOLData <- read.csv("LeagueofLegends.csv")
a<-c("yes","yes","yes","yes","no",NA,"no")
b<-c("yes","yes",NA,NA,"no",NA,"no")
c<-c(15,40,34,24,NA,NA,10)
d<-c("experienced","fresher","experienced","fresher",NA,"fresher","experienced")
e<-("qualified","qualified","qualified",NA,"qualified",NA,"disqualified")
f<-(NA,NA,NA,NA,NA,1,NA)
g<-(1,0,1,1,0,1,1)
data<-data.frame(cbind(a,b,c,d,e,f,g))
e<-c("qualified","qualified","qualified",NA,"qualified",NA,"disqualified")
f<-c(NA,NA,NA,NA,NA,1,NA)
g<-c(1,0,1,1,0,1,1)
data<-data.frame(cbind(a,b,c,d,e,f,g))
View(data)
library('FSelector')
install.packages("FSelector")
res <- gain.ratio(g~., data)
res <- cfs(g~., data)
library('FSelector')
install.packages("FSelector")
library('FSelector')
View(data)
install.packages("FSelector")
library('FSelector')
library('FSelector')
global %>%
group_by(League,Season,Year) %>% summarise(number=n()) %>%
ggplot(aes(x=Year,y=League, size=number,color=Season)) +
geom_point() + facet_wrap(~Season) +
theme(legend.position="top",legend.text=element_text(size=8),legend.key.size = unit(.4, "cm")) +
scale_color_manual(values=c("#3B9AB2", "#78B7C5", "#EBCC2A", "#E1AF00", "#F21A00","#9A8822", "#F5CDB4", "#F8AFA8"))
data[col].unique
data[col].unique == 59
data[col].uniquedf <-data.frame ( some_col = c(1,2,3,4),
another_col = c(4,5,6,7) )
df <-data.frame ( some_col = c(1,2,3,4),
another_col = c(4,5,6,7) )
View(df)
length(unique(df[["some_col"]]))
class( df[["some_col"]] )
[1] "numeric"
library(ggplot2)
library(dplyr)
library(gridExtra)
library(grid)
library(matrixStats)
library(ggplot2)
library(dplyr)
library(gridExtra)
library(grid)
library(matrixStats)
library(RColorBrewer)
LOLData <- read.csv("LeagueofLegends.csv")
View(LOLData)
global<-read.csv('LeagueofLegends.csv',sep=',')
any(is.na(global))
#number of games perleague and year
g1<-global %>%
group_by(League, Season, Year) %>% summarise(number=n()) %>%
ggplot(aes(x=Year,y=number,fill=League)) +
geom_histogram(stat='identity',position='stack') +
scale_fill_manual(values=c("#3B9AB2", "#78B7C5", "#EBCC2A", "#E1AF00", "#F21A00","#9A8822", "#F5CDB4", "#F8AFA8")) +
theme(legend.position='none')  + xlab('') + ylab('number of games')
g2<-global %>%
group_by(League) %>% summarise(number=n()) %>%
ggplot(aes(x=reorder(League,-number),y=number,fill=League)) +
geom_histogram(stat='identity') +
scale_fill_manual(values=c("#3B9AB2", "#78B7C5", "#EBCC2A", "#E1AF00", "#F21A00","#9A8822", "#F5CDB4", "#F8AFA8")) +
theme(legend.position='top',axis.text.x = element_text(angle=45, hjust=1),legend.text=element_text(size=8),legend.key.size = unit(.3, "cm"))  + xlab('') + ylab('number of games')
grid.arrange(g1,g2,ncol=2)
global %>%
dplyr::select(blueTeamTag, bResult,Year) %>%
dplyr::filter(bResult==1) %>%
dplyr::group_by(blueTeamTag,Year) %>%
summarise(number=n()) %>%
ggplot(aes(x=blueTeamTag,y=number,fill=number)) +
geom_bar(stat='identity',width = 0.75) +
theme(legend.position='top',axis.text.x = element_text(angle=45, hjust=1,size=7)) +
facet_wrap(~Year,ncol=1) +
xlab('') + ylab('') + scale_fill_gradient(name='# of wins as Blue Team',low="#85D4E3", high="#3B9AB2")
View(global)
View(LOLData)
#4 Average length of games
global %>%
dplyr::select(redTeamTag, rResult,Year) %>%
dplyr::filter(rResult==1) %>%
dplyr::group_by(redTeamTag,Year) %>%
summarise(number=n()) %>%
ggplot(aes(x=redTeamTag,y=number,fill=number)) +
geom_bar(stat='identity',width = 0.75) +
theme(legend.position='top',axis.text.x = element_text(angle=45, hjust=1,size=7)) +
facet_wrap(~Year,ncol=1) +
xlab('') + ylab('') + scale_fill_gradient(name='# of wins as Red Team',low="#F8AFA8", high="#F21A00")
View(LOLData)
#4 Average length of games
global %>%
dplyr::select(redTeamTag, rResult,Year) %>%
dplyr::filter(rResult==1) %>%
dplyr::group_by(redTeamTag,Year) %>%
summarise(number=n()) %>%
ggplot(aes(x=redTeamTag,y=number,fill=number)) +
geom_bar(stat='identity',width = 0.75) +
theme(legend.position='top',axis.text.x = element_text(angle=45, hjust=1,size=7)) +
facet_wrap(~Year,ncol=1) +
xlab('') + ylab('') + scale_fill_gradient(name='# of wins as Red Team',low="#F8AFA8", high="#F21A00")
#Number of games per Season, breakdown per League and Year
global %>%
dplyr::select(blueTeamTag, bResult,Year) %>%
dplyr::filter(bResult==1) %>%
dplyr::group_by(blueTeamTag,Year) %>%
summarise(number=n()) %>%
ggplot(aes(x=blueTeamTag,y=number,fill=number)) +
geom_bar(stat='identity',width = 0.75) +
theme(legend.position='top',axis.text.x = element_text(angle=45, hjust=1,size=7)) +
facet_wrap(~Year,ncol=1) +
xlab('') + ylab('') + scale_fill_gradient(name='# of wins as Blue Team',low="#85D4E3", high="#3B9AB2")
#4 Average length of games
global %>%
dplyr::select(redTeamTag, rResult,Year) %>%
dplyr::filter(rResult==1) %>%
dplyr::group_by(redTeamTag,Year) %>%
summarise(number=n()) %>%
ggplot(aes(x=redTeamTag,y=number,fill=number)) +
geom_bar(stat='identity',width = 0.75) +
theme(legend.position='top',axis.text.x = element_text(angle=45, hjust=1,size=7)) +
facet_wrap(~Year,ncol=1) +
xlab('') + ylab('') + scale_fill_gradient(name='# of wins as Red Team',low="#F8AFA8", high="#F21A00")
global %>%
group_by(League,Season,Year) %>% summarise(number=n()) %>%
ggplot(aes(x=Year,y=League, size=number,color=Season)) +
geom_point() + facet_wrap(~Season) +
theme(legend.position="top",legend.text=element_text(size=8),legend.key.size = unit(.4, "cm")) +
scale_color_manual(values=c("#3B9AB2", "#78B7C5", "#EBCC2A", "#E1AF00", "#F21A00","#9A8822", "#F5CDB4", "#F8AFA8"))
View(LOLData)
#3.4 Average length of games
global %>%
dplyr::select(League, Season, gamelength) %>%
group_by(League) %>%
ggplot(aes(x=gamelength)) +
geom_density(aes(fill=League),alpha=.5) +
facet_wrap(~League,ncol=4) +
theme(legend.position='top') +
scale_fill_manual(values=c("#3B9AB2", "#78B7C5", "#EBCC2A", "#E1AF00", "#F21A00","#9A8822", "#F5CDB4", "#F8AFA8")) + xlab('[minutes]') + ylab('')
#3.4 Average length of games
global %>%
dplyr::select(League, Season, gamelength) %>%
group_by(League) %>%
ggplot(aes(x=gamelength)) +
geom_density(aes(fill=League),alpha=.5) +
facet_wrap(~League,ncol=4) +
theme(legend.position='top') +
scale_fill_manual(values=c("#3B9AB2", "#78B7C5", "#EBCC2A", "#E1AF00", "#F21A00","#9A8822", "#F5CDB4", "#F8AFA8")) + xlab('[minutes]') + ylab('')
`rlang::last_error()`
rlang::last_error()
rlang::last_error()
rlang::last_trace()
#number of wins ad Blue/red teams
global %>%
dplyr::select(blueTeamTag, bResult,Year) %>%
dplyr::filter(bResult==1) %>%
dplyr::group_by(blueTeamTag,Year) %>%
summarise(number=n()) %>%
ggplot(aes(x=blueTeamTag,y=number,fill=number)) +
geom_bar(stat='identity',width = 0.75) +
theme(legend.position='top',axis.text.x = element_text(angle=45, hjust=1,size=7)) +
facet_wrap(~Year,ncol=1) +
xlab('') + ylab('') + scale_fill_gradient(name='# of wins as Blue Team',low="#85D4E3", high="#3B9AB2")
View(g2)
#4 Details per Match
gold<-read.csv('goldValues.csv',sep=',')
#4 Details per Match
gold<-read.csv('gold.csv',sep=',')
death<-read.csv('kills.csv',sep=',')
objects<-read.csv('monsters.csv',sep=',')
bans<-read.csv('bans.csv',sep=',')
#
game1<-data.frame(t(gold[game_id,3:83]))
#
game1<-data.frame(t(gold[game_id,3:83]))
#
game1<-data.frame(t(gold[Address,3:83]))
#
game1<-data.frame(t(gold[game_id,3:83]))
library(ggplot2)
library(dplyr)
library(gridExtra)
library(grid)
library(matrixStats)
library(RColorBrewer)
LOLData <- read.csv("LeagueofLegends.csv")
View(LOLData)
l <- as.list(levels(LOLData$golddiff))
data<- LOLData[c(6,10)]
View(data)
write.csv(data, file = "data.csv")
global<-read.csv('LeagueofLegends.csv',sep=',')
any(is.na(global))
#number of games perleague and year
g1<-global %>%
group_by(League, Season, Year) %>% summarise(number=n()) %>%
ggplot(aes(x=Year,y=number,fill=League)) +
geom_histogram(stat='identity',position='stack') +
scale_fill_manual(values=c("#3B9AB2", "#78B7C5", "#EBCC2A", "#E1AF00", "#F21A00","#9A8822", "#F5CDB4", "#F8AFA8")) +
theme(legend.position='none')  + xlab('') + ylab('number of games')
g2<-global %>%
group_by(League) %>% summarise(number=n()) %>%
ggplot(aes(x=reorder(League,-number),y=number,fill=League)) +
geom_histogram(stat='identity') +
scale_fill_manual(values=c("#3B9AB2", "#78B7C5", "#EBCC2A", "#E1AF00", "#F21A00","#9A8822", "#F5CDB4", "#F8AFA8")) +
theme(legend.position='top',axis.text.x = element_text(angle=45, hjust=1),legend.text=element_text(size=8),legend.key.size = unit(.3, "cm"))  + xlab('') + ylab('number of games')
grid.arrange(g1,g2,ncol=2)
#bue win
global %>%
dplyr::select(blueTeamTag, bResult,Year) %>%
dplyr::filter(bResult==1) %>%
dplyr::group_by(blueTeamTag,Year) %>%
summarise(number=n()) %>%
ggplot(aes(x=blueTeamTag,y=number,fill=number)) +
geom_bar(stat='identity',width = 0.75) +
theme(legend.position='top',axis.text.x = element_text(angle=45, hjust=1,size=7)) +
facet_wrap(~Year,ncol=1) +
xlab('') + ylab('') + scale_fill_gradient(name='# of wins as Blue Team',low="#85D4E3", high="#3B9AB2")
#red win
global %>%
dplyr::select(redTeamTag, rResult,Year) %>%
dplyr::filter(rResult==1) %>%
dplyr::group_by(redTeamTag,Year) %>%
summarise(number=n()) %>%
ggplot(aes(x=redTeamTag,y=number,fill=number)) +
geom_bar(stat='identity',width = 0.75) +
theme(legend.position='top',axis.text.x = element_text(angle=45, hjust=1,size=7)) +
facet_wrap(~Year,ncol=1) +
xlab('') + ylab('') + scale_fill_gradient(name='# of wins as Red Team',low="#F8AFA8", high="#F21A00")
#Number of games per Season, breakdown per League and Year
global %>%
group_by(League,Season,Year) %>% summarise(number=n()) %>%
ggplot(aes(x=Year,y=League, size=number,color=Season)) +
geom_point() + facet_wrap(~Season) +
theme(legend.position="top",legend.text=element_text(size=8),legend.key.size = unit(.4, "cm")) +
scale_color_manual(values=c("#3B9AB2", "#78B7C5", "#EBCC2A", "#E1AF00", "#F21A00","#9A8822", "#F5CDB4", "#F8AFA8"))
data[col].unique
#3.4 Average length of games
global %>%
dplyr::select(League, Season, gamelength) %>%
group_by(League) %>%
ggplot(aes(x=gamelength)) +
geom_density(aes(fill=League),alpha=.5) +
facet_wrap(~League,ncol=4) +
theme(legend.position='top') +
scale_fill_manual(values=c("#3B9AB2", "#78B7C5", "#EBCC2A", "#E1AF00", "#F21A00","#9A8822", "#F5CDB4", "#F8AFA8")) + xlab('[minutes]') + ylab('')
#4 Details per Match
gold<-read.csv('../input/goldValues.csv',sep=',')
#4 Details per Match
gold<-read.csv('goldValues.csv',sep=',')
death<-read.csv('deathValues.csv',sep=',')
objects<-read.csv('objValues.csv',sep=',')
bans<-read.csv('banValues.csv',sep=',')
bans<-read.csv('banValues.csv',sep=',')
game1<-data.frame(t(gold[game_id,3:83]))
colnames(game1)<-'golddiff'
colnames(game1)<-'gold_diff'
game_id<-1
game1<-data.frame(t(gold[game_id,3:83]))
colnames(game1)<-'gold_diff'
features<-rownames(game1)
rownames(game1)<-1:nrow(game1)
game1$time<-rep(1:nrow(game1))
game1$MatchHistory<-rep(global$MatchHistory[1],nrow(game1))
res<-data.frame(merge(game1, global %>% select(MatchHistory,League,Season,Year,blueTeamTag,bResult, redTeamTag,rResult,gamelength),by='MatchHistory',y.all=T))
res$blueTeam<-ifelse(res$bResult==1,"BLUE:W ; RED:L","BLUE:L ; RED:W")
res %>% na.omit() %>%
ggplot(aes(x=time,y=gold_diff,shape=blueTeam,fill=ifelse(gold_diff>0,"blue","red"))) +
geom_histogram(stat='identity',size=1) +
scale_fill_manual(name="Team",values=c(blue="#3B9AB2",red="#F21A00")) +
scale_shape_manual(name='Result',values = c(19)) +
theme(legend.position='none') + ggtitle(res$blueTeam) +
xlab('minutes') + ylab('Gold difference btw Blue and Red team')
View(game1)
View(game1)
g1<-global %>%
group_by(League, Season, Year) %>% summarise(number=n()) %>%
ggplot(aes(x=Year,y=number,fill=League)) +
geom_histogram(stat='identity',position='stack') +
scale_fill_manual(values=c("#3B9AB2", "#78B7C5", "#EBCC2A", "#E1AF00", "#F21A00","#9A8822", "#F5CDB4", "#F8AFA8")) +
theme(legend.position='none')  + xlab('') + ylab('number of games')
g1<-global %>%
group_by(League, Season, Year) %>% summarise(number=n()) %>%
ggplot(aes(x=Year,y=number,fill=League)) +
geom_histogram(stat='identity',position='stack') +
scale_fill_manual(values=c("#3B9AB2", "#78B7C5", "#EBCC2A", "#E1AF00", "#F21A00","#9A8822", "#F5CDB4", "#F8AFA8")) +
theme(legend.position='none')  + xlab('') + ylab('number of games')
g2<-global %>%
group_by(League) %>% summarise(number=n()) %>%
ggplot(aes(x=reorder(League,-number),y=number,fill=League)) +
geom_histogram(stat='identity') +
scale_fill_manual(values=c("#3B9AB2", "#78B7C5", "#EBCC2A", "#E1AF00", "#F21A00","#9A8822", "#F5CDB4", "#F8AFA8")) +
theme(legend.position='top',axis.text.x = element_text(angle=45, hjust=1),legend.text=element_text(size=8),legend.key.size = unit(.3, "cm"))  + xlab('') + ylab('number of games')
#Gold difference vs. time played
game_id<-1
game1<-data.frame(t(gold[game_id,3:83]))
library(ggplot2)
library(dplyr)
library(gridExtra)
library(grid)
library(matrixStats)
library(RColorBrewer)
global<-read.csv('LeagueofLegends.csv',sep=',')
any(is.na(global))
gold<-read.csv('goldValues.csv',sep=',')
death<-read.csv('deathValues.csv',sep=',')
objects<-read.csv('objValues.csv',sep=',')
bans<-read.csv('banValues.csv',sep=',')
#Gold difference vs. time played
game_id<-1
game1<-data.frame(t(gold[game_id,3:83]))
View(game1)
colnames(game1)<-'gold_diff'
colnames(game1)<-'gold_diff'
View(game1)
features<-rownames(game1)
rownames(game1)<-1:nrow(game1)
game1$time<-rep(1:nrow(game1))
game1$MatchHistory<-rep(global$MatchHistory[1],nrow(game1))
View(game1)
res<-data.frame(merge(game1, global %>% select(MatchHistory,League,Season,Year,blueTeamTag,bResult, redTeamTag,rResult,gamelength),by='MatchHistory',y.all=T))
View(res)
res %>% na.omit() %>%
ggplot(aes(x=time,y=gold_diff,shape=blueTeam,fill=ifelse(gold_diff>0,"blue","red"))) +
geom_histogram(stat='identity',size=1) +
scale_fill_manual(name="Team",values=c(blue="#3B9AB2",red="#F21A00")) +
scale_shape_manual(name='Result',values = c(19)) +
theme(legend.position='none') + ggtitle(res$blueTeam) +
xlab('minutes') + ylab('Gold difference btw Blue and Red team')
library(ggplot2)
library(dplyr)
library(gridExtra)
library(grid)
library(matrixStats)
library(RColorBrewer)
global<-read.csv('LeagueofLegends.csv',sep=',')
any(is.na(global))
gold<-read.csv('goldValues.csv',sep=',')
death<-read.csv('deathValues.csv',sep=',')
objects<-read.csv('objValues.csv',sep=',')
bans<-read.csv('banValues.csv',sep=',')
#Gold difference vs. time played
game_id<-1
View(game_id)
game1<-data.frame(t(gold[game_id,3:83]))
View(game1)
